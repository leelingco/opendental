//
// Translated by CS2J (http://www.cs2j.com): 2/15/2016 8:01:42 PM
//

package OpenDental.Properties;

import OpenDental.Properties.Settings;


//------------------------------------------------------------------------------// <auto-generated>//     This code was generated by a tool.//     Runtime Version:4.0.30319.296////     Changes to this file may cause incorrect behavior and will be lost if//     the code is regenerated.// </auto-generated>//------------------------------------------------------------------------------
// This class allows you to handle specific events on the settings class://  The SettingChanging event is raised before a setting's value is changed.//  The PropertyChanged event is raised after a setting's value is changed.//  The SettingsLoaded event is raised after the setting values are loaded.//  The SettingsSaving event is raised before the setting values are saved.
public final class Settings  extends System.Configuration.ApplicationSettingsBase 
{

    private static Settings defaultInstance = ((Settings)(/* [UNSUPPORTED] external aliases are not yet supported "global::System" */.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
    public static Settings getDefault() throws Exception {
        return defaultInstance;
    }

    public String getOpenDental_com_dentalxchange_webservices_WebServiceService() throws Exception {
        return ((String)(this["OpenDental_com_dentalxchange_webservices_WebServiceService"]));
    }

    public String getOpenDental_localhost_Service1() throws Exception {
        return ((String)(this["OpenDental_localhost_Service1"]));
    }

    public String getOpenDental_customerUpdates_Service1() throws Exception {
        return ((String)(this["OpenDental_customerUpdates_Service1"]));
    }

    public String getOpenDental_PayConnect_MerchantService() throws Exception {
        return ((String)(this["OpenDental_PayConnect_MerchantService"]));
    }

    public String getOpenDental_WebSheets_Sheets() throws Exception {
        return ((String)(this["OpenDental_WebSheets_Sheets"]));
    }

    public String getOpenDental_MobileWeb_Mobile() throws Exception {
        return ((String)(this["OpenDental_MobileWeb_Mobile"]));
    }

    public String getOpenDental_EmdeonITSTest_ITSWS() throws Exception {
        return ((String)(this["OpenDental_EmdeonITSTest_ITSWS"]));
    }

    public String getOpenDental_EmdeonITS_ITSWS() throws Exception {
        return ((String)(this["OpenDental_EmdeonITS_ITSWS"]));
    }

    public String getOpenDental_CallFireService_SMSService() throws Exception {
        return ((String)(this["OpenDental_CallFireService_SMSService"]));
    }

    public String getOpenDental_NewCrop_Update1() throws Exception {
        return ((String)(this["OpenDental_NewCrop_Update1"]));
    }

    public Settings() throws Exception {
    }

    // // To add event handlers for saving and changing settings, uncomment the lines below:
    //
    // this.SettingChanging += this.SettingChangingEventHandler;
    //
    // this.SettingsSaving += this.SettingsSavingEventHandler;
    //
    private void settingChangingEventHandler(Object sender, System.Configuration.SettingChangingEventArgs e) throws Exception {
    }

    // Add code to handle the SettingChangingEvent event here.
    private void settingsSavingEventHandler(Object sender, System.ComponentModel.CancelEventArgs e) throws Exception {
    }

}
// Add code to handle the SettingsSaving event here.

// Add code to handle the SettingsSaving event here.