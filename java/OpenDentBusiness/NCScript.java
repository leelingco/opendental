//
// Translated by CS2J (http://www.cs2j.com): 2/15/2016 8:01:43 PM
//

package OpenDentBusiness;

import OpenDentBusiness.AccountTypeRx;
import OpenDentBusiness.CredentialsType;
import OpenDentBusiness.DestinationType;
import OpenDentBusiness.LicensedPrescriberType;
import OpenDentBusiness.LocationTreeType;
import OpenDentBusiness.LocationType;
import OpenDentBusiness.MidlevelPrescriberType;
import OpenDentBusiness.NewPrescriptionType;
import OpenDentBusiness.NewPrescriptionWithImagesType;
import OpenDentBusiness.OutsidePrescriptionType;
import OpenDentBusiness.PatientType;
import OpenDentBusiness.PrescriptionRenewalResponseType;
import OpenDentBusiness.StaffType;
import OpenDentBusiness.UserRoleType;


//------------------------------------------------------------------------------// <auto-generated>//     This code was generated by a tool.//     Runtime Version:2.0.50727.1433////     Changes to this file may cause incorrect behavior and will be lost if//     the code is regenerated.// </auto-generated>//------------------------------------------------------------------------------//// This source code was auto-generated by xsd, Version=2.0.50727.42.///**
* 
*/
public class NCScript   
{

    private CredentialsType credentialsField;
    private UserRoleType userRoleField;
    private DestinationType destinationField;
    private AccountTypeRx accountField;
    private LocationType locationField;
    private LocationTreeType[] locationTreeField = new LocationTreeType[]();
    private LicensedPrescriberType licensedPrescriberField;
    private StaffType staffField;
    private LicensedPrescriberType supervisingDoctorField;
    private LocationType supervisingDoctorLocationField;
    private MidlevelPrescriberType midlevelPrescriberField;
    private PatientType patientField;
    private NewPrescriptionType newPrescriptionField;
    private PrescriptionRenewalResponseType prescriptionRenewalResponseField;
    private OutsidePrescriptionType[] outsidePrescriptionField = new OutsidePrescriptionType[]();
    private NewPrescriptionWithImagesType newPrescriptionWithImagesField;
    /**
    * 
    */
    public CredentialsType getCredentials() throws Exception {
        return this.credentialsField;
    }

    public void setCredentials(CredentialsType value) throws Exception {
        this.credentialsField = value;
    }

    /**
    * 
    */
    public UserRoleType getUserRole() throws Exception {
        return this.userRoleField;
    }

    public void setUserRole(UserRoleType value) throws Exception {
        this.userRoleField = value;
    }

    /**
    * 
    */
    public DestinationType getDestination() throws Exception {
        return this.destinationField;
    }

    public void setDestination(DestinationType value) throws Exception {
        this.destinationField = value;
    }

    /**
    * 
    */
    public AccountTypeRx getAccount() throws Exception {
        return this.accountField;
    }

    public void setAccount(AccountTypeRx value) throws Exception {
        this.accountField = value;
    }

    /**
    * 
    */
    public LocationType getLocation() throws Exception {
        return this.locationField;
    }

    public void setLocation(LocationType value) throws Exception {
        this.locationField = value;
    }

    /**
    * 
    */
    public LocationTreeType[] getLocationTree() throws Exception {
        return this.locationTreeField;
    }

    public void setLocationTree(LocationTreeType[] value) throws Exception {
        this.locationTreeField = value;
    }

    /**
    * 
    */
    public LicensedPrescriberType getLicensedPrescriber() throws Exception {
        return this.licensedPrescriberField;
    }

    public void setLicensedPrescriber(LicensedPrescriberType value) throws Exception {
        this.licensedPrescriberField = value;
    }

    /**
    * 
    */
    public StaffType getStaff() throws Exception {
        return this.staffField;
    }

    public void setStaff(StaffType value) throws Exception {
        this.staffField = value;
    }

    /**
    * 
    */
    public LicensedPrescriberType getSupervisingDoctor() throws Exception {
        return this.supervisingDoctorField;
    }

    public void setSupervisingDoctor(LicensedPrescriberType value) throws Exception {
        this.supervisingDoctorField = value;
    }

    /**
    * 
    */
    public LocationType getSupervisingDoctorLocation() throws Exception {
        return this.supervisingDoctorLocationField;
    }

    public void setSupervisingDoctorLocation(LocationType value) throws Exception {
        this.supervisingDoctorLocationField = value;
    }

    /**
    * 
    */
    public MidlevelPrescriberType getMidlevelPrescriber() throws Exception {
        return this.midlevelPrescriberField;
    }

    public void setMidlevelPrescriber(MidlevelPrescriberType value) throws Exception {
        this.midlevelPrescriberField = value;
    }

    /**
    * 
    */
    public PatientType getPatient() throws Exception {
        return this.patientField;
    }

    public void setPatient(PatientType value) throws Exception {
        this.patientField = value;
    }

    /**
    * 
    */
    public NewPrescriptionType getNewPrescription() throws Exception {
        return this.newPrescriptionField;
    }

    public void setNewPrescription(NewPrescriptionType value) throws Exception {
        this.newPrescriptionField = value;
    }

    /**
    * 
    */
    public PrescriptionRenewalResponseType getPrescriptionRenewalResponse() throws Exception {
        return this.prescriptionRenewalResponseField;
    }

    public void setPrescriptionRenewalResponse(PrescriptionRenewalResponseType value) throws Exception {
        this.prescriptionRenewalResponseField = value;
    }

    /**
    * 
    */
    public OutsidePrescriptionType[] getOutsidePrescription() throws Exception {
        return this.outsidePrescriptionField;
    }

    public void setOutsidePrescription(OutsidePrescriptionType[] value) throws Exception {
        this.outsidePrescriptionField = value;
    }

    /**
    * 
    */
    public NewPrescriptionWithImagesType getNewPrescriptionWithImages() throws Exception {
        return this.newPrescriptionWithImagesField;
    }

    public void setNewPrescriptionWithImages(NewPrescriptionWithImagesType value) throws Exception {
        this.newPrescriptionWithImagesField = value;
    }

}


