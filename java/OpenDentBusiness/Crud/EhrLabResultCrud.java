//
// Translated by CS2J (http://www.cs2j.com): 2/15/2016 5:58:02 PM
//

package OpenDentBusiness.Crud;

import CS2JNet.System.StringSupport;
import EhrLaboratories.HL70085;
import EhrLaboratories.HL70125;
import EhrLaboratories.HL70190;
import EhrLaboratories.HL70200;
import EhrLaboratories.HL70203;
import EhrLaboratories.USPSAlphaStateCode;
import OpenDentBusiness.Db;
import OpenDentBusiness.DbHelper;
import OpenDentBusiness.EhrLabResult;
import OpenDentBusiness.PIn;
import OpenDentBusiness.POut;
import OpenDentBusiness.PrefC;
import OpenDentBusiness.RemotingClient;
import OpenDentBusiness.RemotingRole;
import OpenDentBusiness.ReplicationServers;

//This file is automatically generated.
//Do not attempt to make changes to this file because the changes will be erased and overwritten.
public class EhrLabResultCrud   
{
    /**
    * Gets one EhrLabResult object from the database using the primary key.  Returns null if not found.
    */
    public static EhrLabResult selectOne(long ehrLabResultNum) throws Exception {
        String command = "SELECT * FROM ehrlabresult " + "WHERE EhrLabResultNum = " + POut.long(ehrLabResultNum);
        List<EhrLabResult> list = tableToList(Db.getTable(command));
        if (list.Count == 0)
        {
            return null;
        }
         
        return list[0];
    }

    /**
    * Gets one EhrLabResult object from the database using a query.
    */
    public static EhrLabResult selectOne(String command) throws Exception {
        if (RemotingClient.RemotingRole == RemotingRole.ClientWeb)
        {
            throw new ApplicationException("Not allowed to send sql directly.  Rewrite the calling class to not use this query:\r\n" + command);
        }
         
        List<EhrLabResult> list = tableToList(Db.getTable(command));
        if (list.Count == 0)
        {
            return null;
        }
         
        return list[0];
    }

    /**
    * Gets a list of EhrLabResult objects from the database using a query.
    */
    public static List<EhrLabResult> selectMany(String command) throws Exception {
        if (RemotingClient.RemotingRole == RemotingRole.ClientWeb)
        {
            throw new ApplicationException("Not allowed to send sql directly.  Rewrite the calling class to not use this query:\r\n" + command);
        }
         
        List<EhrLabResult> list = tableToList(Db.getTable(command));
        return list;
    }

    /**
    * Converts a DataTable to a list of objects.
    */
    public static List<EhrLabResult> tableToList(DataTable table) throws Exception {
        List<EhrLabResult> retVal = new List<EhrLabResult>();
        EhrLabResult ehrLabResult;
        for (int i = 0;i < table.Rows.Count;i++)
        {
            ehrLabResult = new EhrLabResult();
            ehrLabResult.EhrLabResultNum = PIn.Long(table.Rows[i]["EhrLabResultNum"].ToString());
            ehrLabResult.EhrLabNum = PIn.Long(table.Rows[i]["EhrLabNum"].ToString());
            ehrLabResult.SetIdOBX = PIn.Long(table.Rows[i]["SetIdOBX"].ToString());
            String valueType = table.Rows[i]["ValueType"].ToString();
            if (StringSupport.equals(valueType, ""))
            {
                ehrLabResult.ValueType = HL70125.values()[0];
            }
            else
                try
                {
                    ehrLabResult.ValueType = (HL70125)Enum.Parse(HL70125.class, valueType);
                }
                catch (Exception __dummyCatchVar0)
                {
                    ehrLabResult.ValueType = HL70125.values()[0];
                }
             
            ehrLabResult.ObservationIdentifierID = PIn.String(table.Rows[i]["ObservationIdentifierID"].ToString());
            ehrLabResult.ObservationIdentifierText = PIn.String(table.Rows[i]["ObservationIdentifierText"].ToString());
            ehrLabResult.ObservationIdentifierCodeSystemName = PIn.String(table.Rows[i]["ObservationIdentifierCodeSystemName"].ToString());
            ehrLabResult.ObservationIdentifierIDAlt = PIn.String(table.Rows[i]["ObservationIdentifierIDAlt"].ToString());
            ehrLabResult.ObservationIdentifierTextAlt = PIn.String(table.Rows[i]["ObservationIdentifierTextAlt"].ToString());
            ehrLabResult.ObservationIdentifierCodeSystemNameAlt = PIn.String(table.Rows[i]["ObservationIdentifierCodeSystemNameAlt"].ToString());
            ehrLabResult.ObservationIdentifierTextOriginal = PIn.String(table.Rows[i]["ObservationIdentifierTextOriginal"].ToString());
            ehrLabResult.ObservationIdentifierSub = PIn.String(table.Rows[i]["ObservationIdentifierSub"].ToString());
            ehrLabResult.ObservationValueCodedElementID = PIn.String(table.Rows[i]["ObservationValueCodedElementID"].ToString());
            ehrLabResult.ObservationValueCodedElementText = PIn.String(table.Rows[i]["ObservationValueCodedElementText"].ToString());
            ehrLabResult.ObservationValueCodedElementCodeSystemName = PIn.String(table.Rows[i]["ObservationValueCodedElementCodeSystemName"].ToString());
            ehrLabResult.ObservationValueCodedElementIDAlt = PIn.String(table.Rows[i]["ObservationValueCodedElementIDAlt"].ToString());
            ehrLabResult.ObservationValueCodedElementTextAlt = PIn.String(table.Rows[i]["ObservationValueCodedElementTextAlt"].ToString());
            ehrLabResult.ObservationValueCodedElementCodeSystemNameAlt = PIn.String(table.Rows[i]["ObservationValueCodedElementCodeSystemNameAlt"].ToString());
            ehrLabResult.ObservationValueCodedElementTextOriginal = PIn.String(table.Rows[i]["ObservationValueCodedElementTextOriginal"].ToString());
            ehrLabResult.ObservationValueDateTime = PIn.String(table.Rows[i]["ObservationValueDateTime"].ToString());
            ehrLabResult.ObservationValueTime = PIn.Time(table.Rows[i]["ObservationValueTime"].ToString());
            ehrLabResult.ObservationValueComparator = PIn.String(table.Rows[i]["ObservationValueComparator"].ToString());
            ehrLabResult.ObservationValueNumber1 = PIn.Double(table.Rows[i]["ObservationValueNumber1"].ToString());
            ehrLabResult.ObservationValueSeparatorOrSuffix = PIn.String(table.Rows[i]["ObservationValueSeparatorOrSuffix"].ToString());
            ehrLabResult.ObservationValueNumber2 = PIn.Double(table.Rows[i]["ObservationValueNumber2"].ToString());
            ehrLabResult.ObservationValueNumeric = PIn.Double(table.Rows[i]["ObservationValueNumeric"].ToString());
            ehrLabResult.ObservationValueText = PIn.String(table.Rows[i]["ObservationValueText"].ToString());
            ehrLabResult.UnitsID = PIn.String(table.Rows[i]["UnitsID"].ToString());
            ehrLabResult.UnitsText = PIn.String(table.Rows[i]["UnitsText"].ToString());
            ehrLabResult.UnitsCodeSystemName = PIn.String(table.Rows[i]["UnitsCodeSystemName"].ToString());
            ehrLabResult.UnitsIDAlt = PIn.String(table.Rows[i]["UnitsIDAlt"].ToString());
            ehrLabResult.UnitsTextAlt = PIn.String(table.Rows[i]["UnitsTextAlt"].ToString());
            ehrLabResult.UnitsCodeSystemNameAlt = PIn.String(table.Rows[i]["UnitsCodeSystemNameAlt"].ToString());
            ehrLabResult.UnitsTextOriginal = PIn.String(table.Rows[i]["UnitsTextOriginal"].ToString());
            ehrLabResult.referenceRange = PIn.String(table.Rows[i]["referenceRange"].ToString());
            ehrLabResult.AbnormalFlags = PIn.String(table.Rows[i]["AbnormalFlags"].ToString());
            String observationResultStatus = table.Rows[i]["ObservationResultStatus"].ToString();
            if (StringSupport.equals(observationResultStatus, ""))
            {
                ehrLabResult.ObservationResultStatus = HL70085.values()[0];
            }
            else
                try
                {
                    ehrLabResult.ObservationResultStatus = (HL70085)Enum.Parse(HL70085.class, observationResultStatus);
                }
                catch (Exception __dummyCatchVar1)
                {
                    ehrLabResult.ObservationResultStatus = HL70085.values()[0];
                }
             
            ehrLabResult.ObservationDateTime = PIn.String(table.Rows[i]["ObservationDateTime"].ToString());
            ehrLabResult.AnalysisDateTime = PIn.String(table.Rows[i]["AnalysisDateTime"].ToString());
            ehrLabResult.PerformingOrganizationName = PIn.String(table.Rows[i]["PerformingOrganizationName"].ToString());
            ehrLabResult.PerformingOrganizationNameAssigningAuthorityNamespaceId = PIn.String(table.Rows[i]["PerformingOrganizationNameAssigningAuthorityNamespaceId"].ToString());
            ehrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalId = PIn.String(table.Rows[i]["PerformingOrganizationNameAssigningAuthorityUniversalId"].ToString());
            ehrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalIdType = PIn.String(table.Rows[i]["PerformingOrganizationNameAssigningAuthorityUniversalIdType"].ToString());
            String performingOrganizationIdentifierTypeCode = table.Rows[i]["PerformingOrganizationIdentifierTypeCode"].ToString();
            if (StringSupport.equals(performingOrganizationIdentifierTypeCode, ""))
            {
                ehrLabResult.PerformingOrganizationIdentifierTypeCode = HL70203.values()[0];
            }
            else
                try
                {
                    ehrLabResult.PerformingOrganizationIdentifierTypeCode = (HL70203)Enum.Parse(HL70203.class, performingOrganizationIdentifierTypeCode);
                }
                catch (Exception __dummyCatchVar2)
                {
                    ehrLabResult.PerformingOrganizationIdentifierTypeCode = HL70203.values()[0];
                }
             
            ehrLabResult.PerformingOrganizationIdentifier = PIn.String(table.Rows[i]["PerformingOrganizationIdentifier"].ToString());
            ehrLabResult.PerformingOrganizationAddressStreet = PIn.String(table.Rows[i]["PerformingOrganizationAddressStreet"].ToString());
            ehrLabResult.PerformingOrganizationAddressOtherDesignation = PIn.String(table.Rows[i]["PerformingOrganizationAddressOtherDesignation"].ToString());
            ehrLabResult.PerformingOrganizationAddressCity = PIn.String(table.Rows[i]["PerformingOrganizationAddressCity"].ToString());
            String performingOrganizationAddressStateOrProvince = table.Rows[i]["PerformingOrganizationAddressStateOrProvince"].ToString();
            if (StringSupport.equals(performingOrganizationAddressStateOrProvince, ""))
            {
                ehrLabResult.PerformingOrganizationAddressStateOrProvince = USPSAlphaStateCode.values()[0];
            }
            else
                try
                {
                    ehrLabResult.PerformingOrganizationAddressStateOrProvince = (USPSAlphaStateCode)Enum.Parse(USPSAlphaStateCode.class, performingOrganizationAddressStateOrProvince);
                }
                catch (Exception __dummyCatchVar3)
                {
                    ehrLabResult.PerformingOrganizationAddressStateOrProvince = USPSAlphaStateCode.values()[0];
                }
             
            ehrLabResult.PerformingOrganizationAddressZipOrPostalCode = PIn.String(table.Rows[i]["PerformingOrganizationAddressZipOrPostalCode"].ToString());
            ehrLabResult.PerformingOrganizationAddressCountryCode = PIn.String(table.Rows[i]["PerformingOrganizationAddressCountryCode"].ToString());
            String performingOrganizationAddressAddressType = table.Rows[i]["PerformingOrganizationAddressAddressType"].ToString();
            if (StringSupport.equals(performingOrganizationAddressAddressType, ""))
            {
                ehrLabResult.PerformingOrganizationAddressAddressType = HL70190.values()[0];
            }
            else
                try
                {
                    ehrLabResult.PerformingOrganizationAddressAddressType = (HL70190)Enum.Parse(HL70190.class, performingOrganizationAddressAddressType);
                }
                catch (Exception __dummyCatchVar4)
                {
                    ehrLabResult.PerformingOrganizationAddressAddressType = HL70190.values()[0];
                }
             
            ehrLabResult.PerformingOrganizationAddressCountyOrParishCode = PIn.String(table.Rows[i]["PerformingOrganizationAddressCountyOrParishCode"].ToString());
            ehrLabResult.MedicalDirectorID = PIn.String(table.Rows[i]["MedicalDirectorID"].ToString());
            ehrLabResult.MedicalDirectorLName = PIn.String(table.Rows[i]["MedicalDirectorLName"].ToString());
            ehrLabResult.MedicalDirectorFName = PIn.String(table.Rows[i]["MedicalDirectorFName"].ToString());
            ehrLabResult.MedicalDirectorMiddleNames = PIn.String(table.Rows[i]["MedicalDirectorMiddleNames"].ToString());
            ehrLabResult.MedicalDirectorSuffix = PIn.String(table.Rows[i]["MedicalDirectorSuffix"].ToString());
            ehrLabResult.MedicalDirectorPrefix = PIn.String(table.Rows[i]["MedicalDirectorPrefix"].ToString());
            ehrLabResult.MedicalDirectorAssigningAuthorityNamespaceID = PIn.String(table.Rows[i]["MedicalDirectorAssigningAuthorityNamespaceID"].ToString());
            ehrLabResult.MedicalDirectorAssigningAuthorityUniversalID = PIn.String(table.Rows[i]["MedicalDirectorAssigningAuthorityUniversalID"].ToString());
            ehrLabResult.MedicalDirectorAssigningAuthorityIDType = PIn.String(table.Rows[i]["MedicalDirectorAssigningAuthorityIDType"].ToString());
            String medicalDirectorNameTypeCode = table.Rows[i]["MedicalDirectorNameTypeCode"].ToString();
            if (StringSupport.equals(medicalDirectorNameTypeCode, ""))
            {
                ehrLabResult.MedicalDirectorNameTypeCode = HL70200.values()[0];
            }
            else
                try
                {
                    ehrLabResult.MedicalDirectorNameTypeCode = (HL70200)Enum.Parse(HL70200.class, medicalDirectorNameTypeCode);
                }
                catch (Exception __dummyCatchVar5)
                {
                    ehrLabResult.MedicalDirectorNameTypeCode = HL70200.values()[0];
                }
             
            String medicalDirectorIdentifierTypeCode = table.Rows[i]["MedicalDirectorIdentifierTypeCode"].ToString();
            if (StringSupport.equals(medicalDirectorIdentifierTypeCode, ""))
            {
                ehrLabResult.MedicalDirectorIdentifierTypeCode = HL70203.values()[0];
            }
            else
                try
                {
                    ehrLabResult.MedicalDirectorIdentifierTypeCode = (HL70203)Enum.Parse(HL70203.class, medicalDirectorIdentifierTypeCode);
                }
                catch (Exception __dummyCatchVar6)
                {
                    ehrLabResult.MedicalDirectorIdentifierTypeCode = HL70203.values()[0];
                }
             
            retVal.Add(ehrLabResult);
        }
        return retVal;
    }

    /**
    * Inserts one EhrLabResult into the database.  Returns the new priKey.
    */
    public static long insert(EhrLabResult ehrLabResult) throws Exception {
        if (OpenDentBusiness.DataConnection.DBtype == OpenDentBusiness.DatabaseType.Oracle)
        {
            ehrLabResult.EhrLabResultNum = DbHelper.getNextOracleKey("ehrlabresult","EhrLabResultNum");
            int loopcount = 0;
            while (loopcount < 100)
            {
                try
                {
                    return Insert(ehrLabResult, true);
                }
                catch (Oracle.DataAccess.Client.OracleException ex)
                {
                    if (ex.Number == 1 && ex.Message.ToLower().Contains("unique constraint") && ex.Message.ToLower().Contains("violated"))
                    {
                        ehrLabResult.EhrLabResultNum++;
                        loopcount++;
                    }
                    else
                    {
                        throw ex;
                    } 
                }
            
            }
            throw new ApplicationException("Insert failed.  Could not generate primary key.");
        }
        else
        {
            return Insert(ehrLabResult, false);
        } 
    }

    /**
    * Inserts one EhrLabResult into the database.  Provides option to use the existing priKey.
    */
    public static long insert(EhrLabResult ehrLabResult, boolean useExistingPK) throws Exception {
        if (!useExistingPK && PrefC.getRandomKeys())
        {
            ehrLabResult.EhrLabResultNum = ReplicationServers.getKey("ehrlabresult","EhrLabResultNum");
        }
         
        String command = "INSERT INTO ehrlabresult (";
        if (useExistingPK || PrefC.getRandomKeys())
        {
            command += "EhrLabResultNum,";
        }
         
        command += "EhrLabNum,SetIdOBX,ValueType,ObservationIdentifierID,ObservationIdentifierText,ObservationIdentifierCodeSystemName,ObservationIdentifierIDAlt,ObservationIdentifierTextAlt,ObservationIdentifierCodeSystemNameAlt,ObservationIdentifierTextOriginal,ObservationIdentifierSub,ObservationValueCodedElementID,ObservationValueCodedElementText,ObservationValueCodedElementCodeSystemName,ObservationValueCodedElementIDAlt,ObservationValueCodedElementTextAlt,ObservationValueCodedElementCodeSystemNameAlt,ObservationValueCodedElementTextOriginal,ObservationValueDateTime,ObservationValueTime,ObservationValueComparator,ObservationValueNumber1,ObservationValueSeparatorOrSuffix,ObservationValueNumber2,ObservationValueNumeric,ObservationValueText,UnitsID,UnitsText,UnitsCodeSystemName,UnitsIDAlt,UnitsTextAlt,UnitsCodeSystemNameAlt,UnitsTextOriginal,referenceRange,AbnormalFlags,ObservationResultStatus,ObservationDateTime,AnalysisDateTime,PerformingOrganizationName,PerformingOrganizationNameAssigningAuthorityNamespaceId,PerformingOrganizationNameAssigningAuthorityUniversalId,PerformingOrganizationNameAssigningAuthorityUniversalIdType,PerformingOrganizationIdentifierTypeCode,PerformingOrganizationIdentifier,PerformingOrganizationAddressStreet,PerformingOrganizationAddressOtherDesignation,PerformingOrganizationAddressCity,PerformingOrganizationAddressStateOrProvince,PerformingOrganizationAddressZipOrPostalCode,PerformingOrganizationAddressCountryCode,PerformingOrganizationAddressAddressType,PerformingOrganizationAddressCountyOrParishCode,MedicalDirectorID,MedicalDirectorLName,MedicalDirectorFName,MedicalDirectorMiddleNames,MedicalDirectorSuffix,MedicalDirectorPrefix,MedicalDirectorAssigningAuthorityNamespaceID,MedicalDirectorAssigningAuthorityUniversalID,MedicalDirectorAssigningAuthorityIDType,MedicalDirectorNameTypeCode,MedicalDirectorIdentifierTypeCode) VALUES(";
        if (useExistingPK || PrefC.getRandomKeys())
        {
            command += POut.long(ehrLabResult.EhrLabResultNum) + ",";
        }
         
        command += POut.long(ehrLabResult.EhrLabNum) + "," + POut.long(ehrLabResult.SetIdOBX) + "," + "'" + POut.String(ehrLabResult.ValueType.ToString()) + "'," + "'" + POut.string(ehrLabResult.ObservationIdentifierID) + "'," + "'" + POut.string(ehrLabResult.ObservationIdentifierText) + "'," + "'" + POut.string(ehrLabResult.ObservationIdentifierCodeSystemName) + "'," + "'" + POut.string(ehrLabResult.ObservationIdentifierIDAlt) + "'," + "'" + POut.string(ehrLabResult.ObservationIdentifierTextAlt) + "'," + "'" + POut.string(ehrLabResult.ObservationIdentifierCodeSystemNameAlt) + "'," + "'" + POut.string(ehrLabResult.ObservationIdentifierTextOriginal) + "'," + "'" + POut.string(ehrLabResult.ObservationIdentifierSub) + "'," + "'" + POut.string(ehrLabResult.ObservationValueCodedElementID) + "'," + "'" + POut.string(ehrLabResult.ObservationValueCodedElementText) + "'," + "'" + POut.string(ehrLabResult.ObservationValueCodedElementCodeSystemName) + "'," + "'" + POut.string(ehrLabResult.ObservationValueCodedElementIDAlt) + "'," + "'" + POut.string(ehrLabResult.ObservationValueCodedElementTextAlt) + "'," + "'" + POut.string(ehrLabResult.ObservationValueCodedElementCodeSystemNameAlt) + "'," + "'" + POut.string(ehrLabResult.ObservationValueCodedElementTextOriginal) + "'," + "'" + POut.string(ehrLabResult.ObservationValueDateTime) + "'," + POut.time(ehrLabResult.ObservationValueTime) + "," + "'" + POut.string(ehrLabResult.ObservationValueComparator) + "'," + "'" + POut.double(ehrLabResult.ObservationValueNumber1) + "'," + "'" + POut.string(ehrLabResult.ObservationValueSeparatorOrSuffix) + "'," + "'" + POut.double(ehrLabResult.ObservationValueNumber2) + "'," + "'" + POut.double(ehrLabResult.ObservationValueNumeric) + "'," + "'" + POut.string(ehrLabResult.ObservationValueText) + "'," + "'" + POut.string(ehrLabResult.UnitsID) + "'," + "'" + POut.string(ehrLabResult.UnitsText) + "'," + "'" + POut.string(ehrLabResult.UnitsCodeSystemName) + "'," + "'" + POut.string(ehrLabResult.UnitsIDAlt) + "'," + "'" + POut.string(ehrLabResult.UnitsTextAlt) + "'," + "'" + POut.string(ehrLabResult.UnitsCodeSystemNameAlt) + "'," + "'" + POut.string(ehrLabResult.UnitsTextOriginal) + "'," + "'" + POut.string(ehrLabResult.referenceRange) + "'," + "'" + POut.string(ehrLabResult.AbnormalFlags) + "'," + "'" + POut.String(ehrLabResult.ObservationResultStatus.ToString()) + "'," + "'" + POut.string(ehrLabResult.ObservationDateTime) + "'," + "'" + POut.string(ehrLabResult.AnalysisDateTime) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationName) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationNameAssigningAuthorityNamespaceId) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalId) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalIdType) + "'," + "'" + POut.String(ehrLabResult.PerformingOrganizationIdentifierTypeCode.ToString()) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationIdentifier) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationAddressStreet) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationAddressOtherDesignation) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationAddressCity) + "'," + "'" + POut.String(ehrLabResult.PerformingOrganizationAddressStateOrProvince.ToString()) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationAddressZipOrPostalCode) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationAddressCountryCode) + "'," + "'" + POut.String(ehrLabResult.PerformingOrganizationAddressAddressType.ToString()) + "'," + "'" + POut.string(ehrLabResult.PerformingOrganizationAddressCountyOrParishCode) + "'," + "'" + POut.string(ehrLabResult.MedicalDirectorID) + "'," + "'" + POut.string(ehrLabResult.MedicalDirectorLName) + "'," + "'" + POut.string(ehrLabResult.MedicalDirectorFName) + "'," + "'" + POut.string(ehrLabResult.MedicalDirectorMiddleNames) + "'," + "'" + POut.string(ehrLabResult.MedicalDirectorSuffix) + "'," + "'" + POut.string(ehrLabResult.MedicalDirectorPrefix) + "'," + "'" + POut.string(ehrLabResult.MedicalDirectorAssigningAuthorityNamespaceID) + "'," + "'" + POut.string(ehrLabResult.MedicalDirectorAssigningAuthorityUniversalID) + "'," + "'" + POut.string(ehrLabResult.MedicalDirectorAssigningAuthorityIDType) + "'," + "'" + POut.String(ehrLabResult.MedicalDirectorNameTypeCode.ToString()) + "'," + "'" + POut.String(ehrLabResult.MedicalDirectorIdentifierTypeCode.ToString()) + "')";
        if (useExistingPK || PrefC.getRandomKeys())
        {
            Db.nonQ(command);
        }
        else
        {
            ehrLabResult.EhrLabResultNum = Db.nonQ(command,true);
        } 
        return ehrLabResult.EhrLabResultNum;
    }

    /**
    * Updates one EhrLabResult in the database.
    */
    public static void update(EhrLabResult ehrLabResult) throws Exception {
        String command = "UPDATE ehrlabresult SET " + "EhrLabNum                                                  =  " + POut.long(ehrLabResult.EhrLabNum) + ", " + "SetIdOBX                                                   =  " + POut.long(ehrLabResult.SetIdOBX) + ", " + "ValueType                                                  = '" + POut.String(ehrLabResult.ValueType.ToString()) + "', " + "ObservationIdentifierID                                    = '" + POut.string(ehrLabResult.ObservationIdentifierID) + "', " + "ObservationIdentifierText                                  = '" + POut.string(ehrLabResult.ObservationIdentifierText) + "', " + "ObservationIdentifierCodeSystemName                        = '" + POut.string(ehrLabResult.ObservationIdentifierCodeSystemName) + "', " + "ObservationIdentifierIDAlt                                 = '" + POut.string(ehrLabResult.ObservationIdentifierIDAlt) + "', " + "ObservationIdentifierTextAlt                               = '" + POut.string(ehrLabResult.ObservationIdentifierTextAlt) + "', " + "ObservationIdentifierCodeSystemNameAlt                     = '" + POut.string(ehrLabResult.ObservationIdentifierCodeSystemNameAlt) + "', " + "ObservationIdentifierTextOriginal                          = '" + POut.string(ehrLabResult.ObservationIdentifierTextOriginal) + "', " + "ObservationIdentifierSub                                   = '" + POut.string(ehrLabResult.ObservationIdentifierSub) + "', " + "ObservationValueCodedElementID                             = '" + POut.string(ehrLabResult.ObservationValueCodedElementID) + "', " + "ObservationValueCodedElementText                           = '" + POut.string(ehrLabResult.ObservationValueCodedElementText) + "', " + "ObservationValueCodedElementCodeSystemName                 = '" + POut.string(ehrLabResult.ObservationValueCodedElementCodeSystemName) + "', " + "ObservationValueCodedElementIDAlt                          = '" + POut.string(ehrLabResult.ObservationValueCodedElementIDAlt) + "', " + "ObservationValueCodedElementTextAlt                        = '" + POut.string(ehrLabResult.ObservationValueCodedElementTextAlt) + "', " + "ObservationValueCodedElementCodeSystemNameAlt              = '" + POut.string(ehrLabResult.ObservationValueCodedElementCodeSystemNameAlt) + "', " + "ObservationValueCodedElementTextOriginal                   = '" + POut.string(ehrLabResult.ObservationValueCodedElementTextOriginal) + "', " + "ObservationValueDateTime                                   = '" + POut.string(ehrLabResult.ObservationValueDateTime) + "', " + "ObservationValueTime                                       =  " + POut.time(ehrLabResult.ObservationValueTime) + ", " + "ObservationValueComparator                                 = '" + POut.string(ehrLabResult.ObservationValueComparator) + "', " + "ObservationValueNumber1                                    = '" + POut.double(ehrLabResult.ObservationValueNumber1) + "', " + "ObservationValueSeparatorOrSuffix                          = '" + POut.string(ehrLabResult.ObservationValueSeparatorOrSuffix) + "', " + "ObservationValueNumber2                                    = '" + POut.double(ehrLabResult.ObservationValueNumber2) + "', " + "ObservationValueNumeric                                    = '" + POut.double(ehrLabResult.ObservationValueNumeric) + "', " + "ObservationValueText                                       = '" + POut.string(ehrLabResult.ObservationValueText) + "', " + "UnitsID                                                    = '" + POut.string(ehrLabResult.UnitsID) + "', " + "UnitsText                                                  = '" + POut.string(ehrLabResult.UnitsText) + "', " + "UnitsCodeSystemName                                        = '" + POut.string(ehrLabResult.UnitsCodeSystemName) + "', " + "UnitsIDAlt                                                 = '" + POut.string(ehrLabResult.UnitsIDAlt) + "', " + "UnitsTextAlt                                               = '" + POut.string(ehrLabResult.UnitsTextAlt) + "', " + "UnitsCodeSystemNameAlt                                     = '" + POut.string(ehrLabResult.UnitsCodeSystemNameAlt) + "', " + "UnitsTextOriginal                                          = '" + POut.string(ehrLabResult.UnitsTextOriginal) + "', " + "referenceRange                                             = '" + POut.string(ehrLabResult.referenceRange) + "', " + "AbnormalFlags                                              = '" + POut.string(ehrLabResult.AbnormalFlags) + "', " + "ObservationResultStatus                                    = '" + POut.String(ehrLabResult.ObservationResultStatus.ToString()) + "', " + "ObservationDateTime                                        = '" + POut.string(ehrLabResult.ObservationDateTime) + "', " + "AnalysisDateTime                                           = '" + POut.string(ehrLabResult.AnalysisDateTime) + "', " + "PerformingOrganizationName                                 = '" + POut.string(ehrLabResult.PerformingOrganizationName) + "', " + "PerformingOrganizationNameAssigningAuthorityNamespaceId    = '" + POut.string(ehrLabResult.PerformingOrganizationNameAssigningAuthorityNamespaceId) + "', " + "PerformingOrganizationNameAssigningAuthorityUniversalId    = '" + POut.string(ehrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalId) + "', " + "PerformingOrganizationNameAssigningAuthorityUniversalIdType= '" + POut.string(ehrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalIdType) + "', " + "PerformingOrganizationIdentifierTypeCode                   = '" + POut.String(ehrLabResult.PerformingOrganizationIdentifierTypeCode.ToString()) + "', " + "PerformingOrganizationIdentifier                           = '" + POut.string(ehrLabResult.PerformingOrganizationIdentifier) + "', " + "PerformingOrganizationAddressStreet                        = '" + POut.string(ehrLabResult.PerformingOrganizationAddressStreet) + "', " + "PerformingOrganizationAddressOtherDesignation              = '" + POut.string(ehrLabResult.PerformingOrganizationAddressOtherDesignation) + "', " + "PerformingOrganizationAddressCity                          = '" + POut.string(ehrLabResult.PerformingOrganizationAddressCity) + "', " + "PerformingOrganizationAddressStateOrProvince               = '" + POut.String(ehrLabResult.PerformingOrganizationAddressStateOrProvince.ToString()) + "', " + "PerformingOrganizationAddressZipOrPostalCode               = '" + POut.string(ehrLabResult.PerformingOrganizationAddressZipOrPostalCode) + "', " + "PerformingOrganizationAddressCountryCode                   = '" + POut.string(ehrLabResult.PerformingOrganizationAddressCountryCode) + "', " + "PerformingOrganizationAddressAddressType                   = '" + POut.String(ehrLabResult.PerformingOrganizationAddressAddressType.ToString()) + "', " + "PerformingOrganizationAddressCountyOrParishCode            = '" + POut.string(ehrLabResult.PerformingOrganizationAddressCountyOrParishCode) + "', " + "MedicalDirectorID                                          = '" + POut.string(ehrLabResult.MedicalDirectorID) + "', " + "MedicalDirectorLName                                       = '" + POut.string(ehrLabResult.MedicalDirectorLName) + "', " + "MedicalDirectorFName                                       = '" + POut.string(ehrLabResult.MedicalDirectorFName) + "', " + "MedicalDirectorMiddleNames                                 = '" + POut.string(ehrLabResult.MedicalDirectorMiddleNames) + "', " + "MedicalDirectorSuffix                                      = '" + POut.string(ehrLabResult.MedicalDirectorSuffix) + "', " + "MedicalDirectorPrefix                                      = '" + POut.string(ehrLabResult.MedicalDirectorPrefix) + "', " + "MedicalDirectorAssigningAuthorityNamespaceID               = '" + POut.string(ehrLabResult.MedicalDirectorAssigningAuthorityNamespaceID) + "', " + "MedicalDirectorAssigningAuthorityUniversalID               = '" + POut.string(ehrLabResult.MedicalDirectorAssigningAuthorityUniversalID) + "', " + "MedicalDirectorAssigningAuthorityIDType                    = '" + POut.string(ehrLabResult.MedicalDirectorAssigningAuthorityIDType) + "', " + "MedicalDirectorNameTypeCode                                = '" + POut.String(ehrLabResult.MedicalDirectorNameTypeCode.ToString()) + "', " + "MedicalDirectorIdentifierTypeCode                          = '" + POut.String(ehrLabResult.MedicalDirectorIdentifierTypeCode.ToString()) + "' " + "WHERE EhrLabResultNum = " + POut.long(ehrLabResult.EhrLabResultNum);
        Db.nonQ(command);
    }

    /**
    * Updates one EhrLabResult in the database.  Uses an old object to compare to, and only alters changed fields.  This prevents collisions and concurrency problems in heavily used tables.
    */
    public static void update(EhrLabResult ehrLabResult, EhrLabResult oldEhrLabResult) throws Exception {
        String command = "";
        if (ehrLabResult.EhrLabNum != oldEhrLabResult.EhrLabNum)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "EhrLabNum = " + POut.long(ehrLabResult.EhrLabNum) + "";
        }
         
        if (ehrLabResult.SetIdOBX != oldEhrLabResult.SetIdOBX)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "SetIdOBX = " + POut.long(ehrLabResult.SetIdOBX) + "";
        }
         
        if (ehrLabResult.ValueType != oldEhrLabResult.ValueType)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ValueType = '" + POut.String(ehrLabResult.ValueType.ToString()) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationIdentifierID, oldEhrLabResult.ObservationIdentifierID))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationIdentifierID = '" + POut.string(ehrLabResult.ObservationIdentifierID) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationIdentifierText, oldEhrLabResult.ObservationIdentifierText))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationIdentifierText = '" + POut.string(ehrLabResult.ObservationIdentifierText) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationIdentifierCodeSystemName, oldEhrLabResult.ObservationIdentifierCodeSystemName))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationIdentifierCodeSystemName = '" + POut.string(ehrLabResult.ObservationIdentifierCodeSystemName) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationIdentifierIDAlt, oldEhrLabResult.ObservationIdentifierIDAlt))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationIdentifierIDAlt = '" + POut.string(ehrLabResult.ObservationIdentifierIDAlt) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationIdentifierTextAlt, oldEhrLabResult.ObservationIdentifierTextAlt))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationIdentifierTextAlt = '" + POut.string(ehrLabResult.ObservationIdentifierTextAlt) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationIdentifierCodeSystemNameAlt, oldEhrLabResult.ObservationIdentifierCodeSystemNameAlt))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationIdentifierCodeSystemNameAlt = '" + POut.string(ehrLabResult.ObservationIdentifierCodeSystemNameAlt) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationIdentifierTextOriginal, oldEhrLabResult.ObservationIdentifierTextOriginal))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationIdentifierTextOriginal = '" + POut.string(ehrLabResult.ObservationIdentifierTextOriginal) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationIdentifierSub, oldEhrLabResult.ObservationIdentifierSub))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationIdentifierSub = '" + POut.string(ehrLabResult.ObservationIdentifierSub) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueCodedElementID, oldEhrLabResult.ObservationValueCodedElementID))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueCodedElementID = '" + POut.string(ehrLabResult.ObservationValueCodedElementID) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueCodedElementText, oldEhrLabResult.ObservationValueCodedElementText))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueCodedElementText = '" + POut.string(ehrLabResult.ObservationValueCodedElementText) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueCodedElementCodeSystemName, oldEhrLabResult.ObservationValueCodedElementCodeSystemName))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueCodedElementCodeSystemName = '" + POut.string(ehrLabResult.ObservationValueCodedElementCodeSystemName) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueCodedElementIDAlt, oldEhrLabResult.ObservationValueCodedElementIDAlt))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueCodedElementIDAlt = '" + POut.string(ehrLabResult.ObservationValueCodedElementIDAlt) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueCodedElementTextAlt, oldEhrLabResult.ObservationValueCodedElementTextAlt))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueCodedElementTextAlt = '" + POut.string(ehrLabResult.ObservationValueCodedElementTextAlt) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueCodedElementCodeSystemNameAlt, oldEhrLabResult.ObservationValueCodedElementCodeSystemNameAlt))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueCodedElementCodeSystemNameAlt = '" + POut.string(ehrLabResult.ObservationValueCodedElementCodeSystemNameAlt) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueCodedElementTextOriginal, oldEhrLabResult.ObservationValueCodedElementTextOriginal))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueCodedElementTextOriginal = '" + POut.string(ehrLabResult.ObservationValueCodedElementTextOriginal) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueDateTime, oldEhrLabResult.ObservationValueDateTime))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueDateTime = '" + POut.string(ehrLabResult.ObservationValueDateTime) + "'";
        }
         
        if (ehrLabResult.ObservationValueTime != oldEhrLabResult.ObservationValueTime)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueTime = " + POut.time(ehrLabResult.ObservationValueTime) + "";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueComparator, oldEhrLabResult.ObservationValueComparator))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueComparator = '" + POut.string(ehrLabResult.ObservationValueComparator) + "'";
        }
         
        if (ehrLabResult.ObservationValueNumber1 != oldEhrLabResult.ObservationValueNumber1)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueNumber1 = '" + POut.double(ehrLabResult.ObservationValueNumber1) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueSeparatorOrSuffix, oldEhrLabResult.ObservationValueSeparatorOrSuffix))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueSeparatorOrSuffix = '" + POut.string(ehrLabResult.ObservationValueSeparatorOrSuffix) + "'";
        }
         
        if (ehrLabResult.ObservationValueNumber2 != oldEhrLabResult.ObservationValueNumber2)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueNumber2 = '" + POut.double(ehrLabResult.ObservationValueNumber2) + "'";
        }
         
        if (ehrLabResult.ObservationValueNumeric != oldEhrLabResult.ObservationValueNumeric)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueNumeric = '" + POut.double(ehrLabResult.ObservationValueNumeric) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationValueText, oldEhrLabResult.ObservationValueText))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationValueText = '" + POut.string(ehrLabResult.ObservationValueText) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.UnitsID, oldEhrLabResult.UnitsID))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "UnitsID = '" + POut.string(ehrLabResult.UnitsID) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.UnitsText, oldEhrLabResult.UnitsText))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "UnitsText = '" + POut.string(ehrLabResult.UnitsText) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.UnitsCodeSystemName, oldEhrLabResult.UnitsCodeSystemName))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "UnitsCodeSystemName = '" + POut.string(ehrLabResult.UnitsCodeSystemName) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.UnitsIDAlt, oldEhrLabResult.UnitsIDAlt))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "UnitsIDAlt = '" + POut.string(ehrLabResult.UnitsIDAlt) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.UnitsTextAlt, oldEhrLabResult.UnitsTextAlt))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "UnitsTextAlt = '" + POut.string(ehrLabResult.UnitsTextAlt) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.UnitsCodeSystemNameAlt, oldEhrLabResult.UnitsCodeSystemNameAlt))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "UnitsCodeSystemNameAlt = '" + POut.string(ehrLabResult.UnitsCodeSystemNameAlt) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.UnitsTextOriginal, oldEhrLabResult.UnitsTextOriginal))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "UnitsTextOriginal = '" + POut.string(ehrLabResult.UnitsTextOriginal) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.referenceRange, oldEhrLabResult.referenceRange))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "referenceRange = '" + POut.string(ehrLabResult.referenceRange) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.AbnormalFlags, oldEhrLabResult.AbnormalFlags))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "AbnormalFlags = '" + POut.string(ehrLabResult.AbnormalFlags) + "'";
        }
         
        if (ehrLabResult.ObservationResultStatus != oldEhrLabResult.ObservationResultStatus)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationResultStatus = '" + POut.String(ehrLabResult.ObservationResultStatus.ToString()) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.ObservationDateTime, oldEhrLabResult.ObservationDateTime))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "ObservationDateTime = '" + POut.string(ehrLabResult.ObservationDateTime) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.AnalysisDateTime, oldEhrLabResult.AnalysisDateTime))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "AnalysisDateTime = '" + POut.string(ehrLabResult.AnalysisDateTime) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationName, oldEhrLabResult.PerformingOrganizationName))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationName = '" + POut.string(ehrLabResult.PerformingOrganizationName) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationNameAssigningAuthorityNamespaceId, oldEhrLabResult.PerformingOrganizationNameAssigningAuthorityNamespaceId))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationNameAssigningAuthorityNamespaceId = '" + POut.string(ehrLabResult.PerformingOrganizationNameAssigningAuthorityNamespaceId) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalId, oldEhrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalId))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationNameAssigningAuthorityUniversalId = '" + POut.string(ehrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalId) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalIdType, oldEhrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalIdType))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationNameAssigningAuthorityUniversalIdType = '" + POut.string(ehrLabResult.PerformingOrganizationNameAssigningAuthorityUniversalIdType) + "'";
        }
         
        if (ehrLabResult.PerformingOrganizationIdentifierTypeCode != oldEhrLabResult.PerformingOrganizationIdentifierTypeCode)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationIdentifierTypeCode = '" + POut.String(ehrLabResult.PerformingOrganizationIdentifierTypeCode.ToString()) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationIdentifier, oldEhrLabResult.PerformingOrganizationIdentifier))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationIdentifier = '" + POut.string(ehrLabResult.PerformingOrganizationIdentifier) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationAddressStreet, oldEhrLabResult.PerformingOrganizationAddressStreet))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationAddressStreet = '" + POut.string(ehrLabResult.PerformingOrganizationAddressStreet) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationAddressOtherDesignation, oldEhrLabResult.PerformingOrganizationAddressOtherDesignation))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationAddressOtherDesignation = '" + POut.string(ehrLabResult.PerformingOrganizationAddressOtherDesignation) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationAddressCity, oldEhrLabResult.PerformingOrganizationAddressCity))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationAddressCity = '" + POut.string(ehrLabResult.PerformingOrganizationAddressCity) + "'";
        }
         
        if (ehrLabResult.PerformingOrganizationAddressStateOrProvince != oldEhrLabResult.PerformingOrganizationAddressStateOrProvince)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationAddressStateOrProvince = '" + POut.String(ehrLabResult.PerformingOrganizationAddressStateOrProvince.ToString()) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationAddressZipOrPostalCode, oldEhrLabResult.PerformingOrganizationAddressZipOrPostalCode))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationAddressZipOrPostalCode = '" + POut.string(ehrLabResult.PerformingOrganizationAddressZipOrPostalCode) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationAddressCountryCode, oldEhrLabResult.PerformingOrganizationAddressCountryCode))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationAddressCountryCode = '" + POut.string(ehrLabResult.PerformingOrganizationAddressCountryCode) + "'";
        }
         
        if (ehrLabResult.PerformingOrganizationAddressAddressType != oldEhrLabResult.PerformingOrganizationAddressAddressType)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationAddressAddressType = '" + POut.String(ehrLabResult.PerformingOrganizationAddressAddressType.ToString()) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.PerformingOrganizationAddressCountyOrParishCode, oldEhrLabResult.PerformingOrganizationAddressCountyOrParishCode))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "PerformingOrganizationAddressCountyOrParishCode = '" + POut.string(ehrLabResult.PerformingOrganizationAddressCountyOrParishCode) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.MedicalDirectorID, oldEhrLabResult.MedicalDirectorID))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorID = '" + POut.string(ehrLabResult.MedicalDirectorID) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.MedicalDirectorLName, oldEhrLabResult.MedicalDirectorLName))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorLName = '" + POut.string(ehrLabResult.MedicalDirectorLName) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.MedicalDirectorFName, oldEhrLabResult.MedicalDirectorFName))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorFName = '" + POut.string(ehrLabResult.MedicalDirectorFName) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.MedicalDirectorMiddleNames, oldEhrLabResult.MedicalDirectorMiddleNames))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorMiddleNames = '" + POut.string(ehrLabResult.MedicalDirectorMiddleNames) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.MedicalDirectorSuffix, oldEhrLabResult.MedicalDirectorSuffix))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorSuffix = '" + POut.string(ehrLabResult.MedicalDirectorSuffix) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.MedicalDirectorPrefix, oldEhrLabResult.MedicalDirectorPrefix))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorPrefix = '" + POut.string(ehrLabResult.MedicalDirectorPrefix) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.MedicalDirectorAssigningAuthorityNamespaceID, oldEhrLabResult.MedicalDirectorAssigningAuthorityNamespaceID))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorAssigningAuthorityNamespaceID = '" + POut.string(ehrLabResult.MedicalDirectorAssigningAuthorityNamespaceID) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.MedicalDirectorAssigningAuthorityUniversalID, oldEhrLabResult.MedicalDirectorAssigningAuthorityUniversalID))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorAssigningAuthorityUniversalID = '" + POut.string(ehrLabResult.MedicalDirectorAssigningAuthorityUniversalID) + "'";
        }
         
        if (!StringSupport.equals(ehrLabResult.MedicalDirectorAssigningAuthorityIDType, oldEhrLabResult.MedicalDirectorAssigningAuthorityIDType))
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorAssigningAuthorityIDType = '" + POut.string(ehrLabResult.MedicalDirectorAssigningAuthorityIDType) + "'";
        }
         
        if (ehrLabResult.MedicalDirectorNameTypeCode != oldEhrLabResult.MedicalDirectorNameTypeCode)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorNameTypeCode = '" + POut.String(ehrLabResult.MedicalDirectorNameTypeCode.ToString()) + "'";
        }
         
        if (ehrLabResult.MedicalDirectorIdentifierTypeCode != oldEhrLabResult.MedicalDirectorIdentifierTypeCode)
        {
            if (!StringSupport.equals(command, ""))
            {
                command += ",";
            }
             
            command += "MedicalDirectorIdentifierTypeCode = '" + POut.String(ehrLabResult.MedicalDirectorIdentifierTypeCode.ToString()) + "'";
        }
         
        if (StringSupport.equals(command, ""))
        {
            return ;
        }
         
        command = "UPDATE ehrlabresult SET " + command + " WHERE EhrLabResultNum = " + POut.long(ehrLabResult.EhrLabResultNum);
        Db.nonQ(command);
    }

    /**
    * Deletes one EhrLabResult from the database.
    */
    public static void delete(long ehrLabResultNum) throws Exception {
        String command = "DELETE FROM ehrlabresult " + "WHERE EhrLabResultNum = " + POut.long(ehrLabResultNum);
        Db.nonQ(command);
    }

}


