//
// Translated by CS2J (http://www.cs2j.com): 2/15/2016 8:01:43 PM
//

package OpenDentBusiness.Properties;

import OpenDentBusiness.Properties.Settings;


//------------------------------------------------------------------------------// <auto-generated>//     This code was generated by a tool.//     Runtime Version:4.0.30319.235////     Changes to this file may cause incorrect behavior and will be lost if//     the code is regenerated.// </auto-generated>//------------------------------------------------------------------------------
// This class allows you to handle specific events on the settings class://  The SettingChanging event is raised before a setting's value is changed.//  The PropertyChanged event is raised after a setting's value is changed.//  The SettingsLoaded event is raised after the setting values are loaded.//  The SettingsSaving event is raised before the setting values are saved.
public final class Settings  extends System.Configuration.ApplicationSettingsBase 
{

    private static Settings defaultInstance = ((Settings)(/* [UNSUPPORTED] external aliases are not yet supported "global::System" */.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
    public static Settings getDefault() throws Exception {
        return defaultInstance;
    }

    public String getOpenDentBusiness_OpenDentalServer_ServiceMain() throws Exception {
        return ((String)(this["OpenDentBusiness_OpenDentalServer_ServiceMain"]));
    }

    public Settings() throws Exception {
    }

    // // To add event handlers for saving and changing settings, uncomment the lines below:
    //
    // this.SettingChanging += this.SettingChangingEventHandler;
    //
    // this.SettingsSaving += this.SettingsSavingEventHandler;
    //
    private void settingChangingEventHandler(Object sender, System.Configuration.SettingChangingEventArgs e) throws Exception {
    }

    // Add code to handle the SettingChangingEvent event here.
    private void settingsSavingEventHandler(Object sender, System.ComponentModel.CancelEventArgs e) throws Exception {
    }

}
// Add code to handle the SettingsSaving event here.

// Add code to handle the SettingsSaving event here.